// Code generated by MockGen. DO NOT EDIT.
// Source: post_tag.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	model "github.com/Le0tk0k/blog-server/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostTagRepository is a mock of PostTagRepository interface
type MockPostTagRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPostTagRepositoryMockRecorder
}

// MockPostTagRepositoryMockRecorder is the mock recorder for MockPostTagRepository
type MockPostTagRepositoryMockRecorder struct {
	mock *MockPostTagRepository
}

// NewMockPostTagRepository creates a new mock instance
func NewMockPostTagRepository(ctrl *gomock.Controller) *MockPostTagRepository {
	mock := &MockPostTagRepository{ctrl: ctrl}
	mock.recorder = &MockPostTagRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostTagRepository) EXPECT() *MockPostTagRepositoryMockRecorder {
	return m.recorder
}

// StorePostTag mocks base method
func (m *MockPostTagRepository) StorePostTag(postTag *model.PostTag) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StorePostTag", postTag)
	ret0, _ := ret[0].(error)
	return ret0
}

// StorePostTag indicates an expected call of StorePostTag
func (mr *MockPostTagRepositoryMockRecorder) StorePostTag(postTag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorePostTag", reflect.TypeOf((*MockPostTagRepository)(nil).StorePostTag), postTag)
}

// DeleteByPostID mocks base method
func (m *MockPostTagRepository) DeleteByPostID(postID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByPostID", postID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByPostID indicates an expected call of DeleteByPostID
func (mr *MockPostTagRepositoryMockRecorder) DeleteByPostID(postID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByPostID", reflect.TypeOf((*MockPostTagRepository)(nil).DeleteByPostID), postID)
}
