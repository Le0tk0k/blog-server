// Code generated by MockGen. DO NOT EDIT.
// Source: mock_post.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	model "github.com/Le0tk0k/blog-server/model"
	gomock "github.com/golang/mock/gomock"
)

// MockPostRepository is a mock of PostRepository interface
type MockPostRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPostRepositoryMockRecorder
}

// MockPostRepositoryMockRecorder is the mock recorder for MockPostRepository
type MockPostRepositoryMockRecorder struct {
	mock *MockPostRepository
}

// NewMockPostRepository creates a new mock instance
func NewMockPostRepository(ctrl *gomock.Controller) *MockPostRepository {
	mock := &MockPostRepository{ctrl: ctrl}
	mock.recorder = &MockPostRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostRepository) EXPECT() *MockPostRepositoryMockRecorder {
	return m.recorder
}

// StorePost mocks base method
func (m *MockPostRepository) StorePost(post *model.Post) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StorePost", post)
	ret0, _ := ret[0].(error)
	return ret0
}

// StorePost indicates an expected call of StorePost
func (mr *MockPostRepositoryMockRecorder) StorePost(post interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorePost", reflect.TypeOf((*MockPostRepository)(nil).StorePost), post)
}
