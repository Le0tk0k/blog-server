// Code generated by MockGen. DO NOT EDIT.
// Source: post_tag.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	model "github.com/Le0tk0k/blog-server/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostTagService is a mock of PostTagService interface
type MockPostTagService struct {
	ctrl     *gomock.Controller
	recorder *MockPostTagServiceMockRecorder
}

// MockPostTagServiceMockRecorder is the mock recorder for MockPostTagService
type MockPostTagServiceMockRecorder struct {
	mock *MockPostTagService
}

// NewMockPostTagService creates a new mock instance
func NewMockPostTagService(ctrl *gomock.Controller) *MockPostTagService {
	mock := &MockPostTagService{ctrl: ctrl}
	mock.recorder = &MockPostTagServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostTagService) EXPECT() *MockPostTagServiceMockRecorder {
	return m.recorder
}

// LinkPostTag mocks base method
func (m *MockPostTagService) LinkPostTag(post *model.Post) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkPostTag", post)
	ret0, _ := ret[0].(error)
	return ret0
}

// LinkPostTag indicates an expected call of LinkPostTag
func (mr *MockPostTagServiceMockRecorder) LinkPostTag(post interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkPostTag", reflect.TypeOf((*MockPostTagService)(nil).LinkPostTag), post)
}
